name: Build and deploy staging demo

on:
  push:
    branches: [deploy]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_landing_page:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: "false"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            COMMIT_REF=${{ github.sha }}
          push: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_staging:
    runs-on: ubuntu-latest
    needs: build_landing_page
    steps:
      - name: Deploy to staging
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAG_POPCORN_HOST }}
          username: ${{ secrets.POPCORN_USER }}
          key: ${{ secrets.POPCORN_SSH_PRIV }}
          port: ${{ secrets.STAG_POPCORN_PORT }}
          script: docker compose up -d
